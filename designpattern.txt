设计模式12
  1. 设计模式七大原则
    1.1 单一职责原则(Single responsibility principle)
    1.2 接口隔离原则(Interface isolation principle)
    1.3 依赖倒置原则(Dependency inversion principle)
    1.4 里氏替换原则(Liskov substitution principle)
    1.5 开闭原则(Open close principle)
    1.6 迪米特法则(Demeter principle)
    1.7 合成复用原则(Composite reuse principle)(UML类图)
  2. UML类图(unified modeling language-统一建模语言)
  	2.1 http://sourceforge.jp/projects/amateras/downloads/56447/AmaterasUML_1.3.4.zip
    2.2 Dependency：依赖-类中用到了对方(成员变量、方法参数、方法返回类型、局部变量)，指向对方
    2.3 Association：关联-单向/双向一对一，依赖关系的特例，指向对方
    2.4 Generalization：泛化-继承，依赖关系的特例，指向父类
    2.5 Realization：实现，依赖关系的特例，指向接口
    2.6 Aggregation：聚合-整体和部分关系，可以分开，关联关系的特例，指向整体
    2.7 Composition：组合-整体和部分不可分开，关联关系的特例，指向整体
  3. 23种设计模式
    3.1 创建型模式(5-对象的创建)
      单例模式、工厂模式(简单工厂/静态工厂/工厂方法)、抽象工厂模式、原型模式、建造者模式
    3.2 结构型模式(7-结构的扩展性)
      适配器模式(类/对象/接口)、桥接模式、装饰模式、组合模式、外观模式、享元模式、代理模式(静态/动态-JDK/Cglib代理)
    3.3 行为型模式(11-方法级别)
      模版方法模式、命令模式、访问者模式、迭代器模式、观察者模式、中介者模式
      备忘录模式、解释器模式、状态模式、策略模式、责任链模式